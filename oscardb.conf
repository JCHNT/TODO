input {
  # Requête 1: personnes d'une activité
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jdbc/postgresql-42.5.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://oscar-test.unilim.fr:5432/oscar"
    jdbc_user => "oscar"
    jdbc_password => "oscar"
    statement => "select firstname, lastname, person.id as person_id, activity_id from activityperson inner join person ON person_id=person.id"
    schedule => "*/30 * * * * *"
    tags => ["persons_activity"]
  }
  
  # Requête 2: nombre d'hébergés par activité
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jdbc/postgresql-42.5.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://oscar-test.unilim.fr:5432/oscar"
    jdbc_user => "oscar"
    jdbc_password => "oscar"
    statement => "select count(*) as heberges_count, activity_id from activityperson inner join person ON person_id=person.id group by activity_id"
    schedule => "*/30 * * * * *"
    tags => ["heberges_count"]
  }
  
  # Requête 3: rôles des organisations
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jdbc/postgresql-42.5.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://oscar-test.unilim.fr:5432/oscar"
    jdbc_user => "oscar"
    jdbc_password => "oscar"
    statement => "select role, shortname, organization.id as org_id, activity_id from activityorganization inner join organization ON organization_id=organization.id"
    schedule => "*/30 * * * * *"
    tags => ["org_roles"]
  }
  
  # Requête 4: organisations avec rôle "Unité de recherche"
  jdbc {
    jdbc_driver_library => "/opt/logstash/vendor/jdbc/postgresql-42.5.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://oscar-test.unilim.fr:5432/oscar"
    jdbc_user => "oscar"
    jdbc_password => "oscar"
    statement => "select role, shortname, organization.id as org_id from activityorganization inner join organization ON organization_id=organization.id and role = 'Unite de recherche'"
    schedule => "*/30 * * * * *"
    tags => ["research_units"]
  }
}

filter {
  if "persons_activity" in [tags] {
    mutate {
      add_field => { "[@metadata][index]" => "persons_activity" }
    }
  }
  else if "heberges_count" in [tags] {
    mutate {
      add_field => { "[@metadata][index]" => "heberges_count" }
    }
  }
  else if "org_roles" in [tags] {
    mutate {
      add_field => { "[@metadata][index]" => "org_roles" }
    }
  }
  else if "research_units" in [tags] {
    mutate {
      add_field => { "[@metadata][index]" => "research_units" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://164.81.15.118:9200"]
    index => "%{[@metadata][index]}"
  }
}
